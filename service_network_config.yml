---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - import_role:
        name: checkjob

    - name: Populate microservice network detail
      set_fact:
        update_vlan: >
             {"service_network":[
               {% for item in chassis_list %}
                {% for n in item.network %}
                 {"context":"MICROSVC_NETWORKCONFIG","action":"MICROSVC_NETWORKCONFIG_ADD","actionObject":[{"NAME":"{{ n.name|upper }}","SUBNETID":"{% if n.plane == 'oam' %}2{% elif n.plane == 'service' %}0{% elif n.plane == 'log' %}3{% endif %}","CLUSTERID":"{{ item.clusterid }}","IPVERSION":"1","NETWORKADDRESSBLOCK":"{{ n.startingip}}","PREFIX":"{{ n.subnet.split('/')[-1] | int }}","GATEWAYIPADDR":"{{ n.gateway }}","BROADCASTADDR":"{{ n.broadcastip }}","USE":"1","RECID":100,"INTERFACEDEVICE":"{{ n.interface}}"}]},
                {% endfor %}
              {% endfor %}
             ]}
    
    - debug:
        msg: "{{ update_vlan }}"
    
    - name: Update Microservice network
      uri:
        url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
        method: POST
        headers:
          Connection: 'keep-alive'
          Authorization: 'Bearer {{ cms_login_token }} '
          Accept: 'application/json, text/plain, */*'
        validate_certs: no
        body_format: json
        body: "{{ item }}"
      with_items: "{{ update_vlan |json_query('service_network')}}"
      register: upd_mcs_nw
      when: dry_run == 0
      failed_when: upd_mcs_nw.json.code | int not in [200, 201]
