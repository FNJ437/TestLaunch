---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - import_role:
        name: checkjob

    - name: Get networkmap
      no_log: true
      uri:
        url: "http://{{cmsurl}}/cms/networkmap?v=1633605424448"
        method: POST
        headers:
          Connection: 'keep-alive'
          Authorization: 'Bearer {{ cms_login_token }} '
          Accept: 'application/json, text/plain, */*'
        validate_certs: no
        body: {"context":"networkmap","action":"networkmap"}
        body_format: json
      register: get_networkmap
      failed_when: get_networkmap.status not in [200, 201]
    
    - set_fact:
        poc_servers: >
         {% for server in get_networkmap.json.dgInfo %}{% if server.CARDTYPE == 32 or server.CARDTYPE == 33 %}{{server}},{% endif %}{% endfor %}
    
    - name: Get external ip lists
      set_fact:
        get_ms_list: >
           {"pool_list":[
             {% for item in poc_servers %}
             {"context":"POC_MS_EXTIP","action":"POC_MS_EXTIP_GETALL","object":{"dgId":"{{item.DGID}}"}},
              {% endfor %}
              ]}
    
    - name: Get media details
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         timeout: 420
         body: '{{item}}'
         body_format: json
      register: GetMedia
      with_items: "{{get_ms_list|to_json|from_json|json_query('pool_list')}}"
      failed_when: GetMedia.status not in [200, 201]
    
    - name: Get Media details
      set_fact:
        doc1: "{{ GetMedia |to_json| from_json | json_query('results[].json.data.values[].{aliasip: ALIASIP, pttid: PTTSERVERID, mediaid:MEDIASERVERID}') }}"
    
    - name: Get external ip lists
      set_fact:
        media_extip_list: >
           {"extip_list":[
             {% for item in doc1 %}
             {% for media_details in extip %}
             {% for i in media_details.aliaslist %}
             {% for poc in poc_servers %}
             {% if i.aliasip == item.aliasip|trim %}
             {% if poc.DGID == item.pttid[2:5] %}
             {"context":"POC_MS_EXTIP","action":"POC_MS_EXTIP_UPDATE","actionObject":{"EXTIP_UDP":"{{i.ext_ip_udp_ipv4}}","EXTIP_TLS_WIFI_V6":"{{i.ext_ip_tls_ipv6}}","AILIASIP_VERSION":1,"EXTIP_UDP_TLS_WIFI":"{{i.ext_ip_tls_udp_ipv4}}","NNI_EXTIP_UDP_V6":"{{i.ext_ip_nni_udp_ipv6}}","EXTERNALDTLSFQDN":null,"EXTIP_UDP_TLS_WIFI_V6":"{{i.ext_ip_tls_udp_ipv6}}","EXTERNALFQDN":null,"EXTIP_UDP_V6":"{{i.ext_ip_udp_ipv6}}","GWNNI_EXTIP_UDP":null,"PTTSERVERID":"{{item.pttid}}","EXTERNALWIFIFQDN":null,"EXTIP_DTLS_V6":"{{i.ext_ip_dtls_ipv6}}","MEDIASERVERID":"{{item.mediaid}}","EXTIP_DTLS":"{{i.ext_ip_dtls_ipv4}}","EXTERNAL_UDP_TLS_WIFIFQDN":null,"NNI_EXTIP_UDP":"{{i.ext_ip_nni_udp_ipv4}}","EXTIP_TLS_WIFI":"{{i.ext_ip_tls_ipv4}}","ALIASIP":"{{item.aliasip|trim}}","PTTSERVERID_DISPLAYNAME":"{{i.pocname}}"},"object":{"dgId":"{{poc.DGID}}"}},
             {% endif %}
             {% endif %}
             {% endfor %}
             {% endfor %}
             {% endfor %}
             {% endfor %}
             ]}
    
    - name: Add external ip to media containers
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         timeout: 420
         body: '{{item}}'
         body_format: json
      register: media_ext
      with_items: "{{media_extip_list|to_json|from_json|json_query('extip_list')}}"
      failed_when: media_ext.json.code | int not in [200, 201]
