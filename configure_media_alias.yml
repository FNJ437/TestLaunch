---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - import_role:
        name: checkjob

    - name: Get networkmap details
      include_tasks: get_networkmap_details.yml
    
    - set_fact:
        dgInfo: "{{ get_networkmap |json_query('json.dgInfo')|to_json |from_json  }}"
    
    - set_fact:
        servers: >
          {% for server in get_networkmap.json.dgInfo %}{% if server.CARDTYPE == 32 %}{{server}},{% endif %}{% endfor %}
    
    - name: POC_MEDIASERVERALIASIP_GETALL
      uri:
        url: "http://{{ cmsurl }}/cms/config?v=1618385170120"
        method: POST
        headers:
          Connection: 'keep-alive'
          Authorization: 'Bearer {{ cms_login_token }} '
          Accept: 'application/json, text/plain, */*'
        validate_certs: no
        body: '{"context":"POC_MEDIASERVERALIASIP","action":"POC_MEDIASERVERALIASIP_GETALL","object":{"dgId":"{{ item.DGID }}"}}'
        body_format: json
      register: media_listidx
      loop: "{{servers}}"
      failed_when: media_listidx.status not in [200, 201]
    
    - set_fact:
        media_listidx: "{{media_listidx.results | sum(attribute=\"json.data.additionalData1\", start=[]) }}"
    
    - debug:
        msg: "{{ media_listidx }}"
    
    - set_fact:
        media_map: >
            {"medialist":[
                {% for nw in legacy %}
                  {% for ip in nw.containers if ip.sigcardid|int == 38 %}
                  {% set outer_loop = loop %}
                    {% for ifc in ip.interface if ip.sigcardid|int == 38 and ifc.ip_type == 'vir'%}
                    {% set med_index = outer_loop.index0 %}
                    {% set pttid = "[? DGID == '" + ip.pocdgid + "' ].cardDetails[]|[? NODETYPE == `1` && SIGNALINGCARDTYPE == `32` ].PTTSERVERID" %}
                    {% set poc_pttserverid = dgInfo | json_query(pttid) | first %}
                    {% set medpttid = "[? DGID == '" + ip.dgid + "' ].cardDetails[]|[? CLUSTERID == '" ~ nw.clusterid ~ "' && SIGNALINGCARDTYPE == `38` ].PTTSERVERID" %}
                    {% set media_pttserverid = dgInfo | json_query(medpttid) |first %}
                    {% set medindex_qry = "[? MEDIACARD_PTTSERVERID  == '" + media_pttserverid  +  "'].MEDIACARDID" %}
                    {% set mediacardid =  media_listidx|json_query(medindex_qry) | first %}
                    {"context":"POC_MEDIASERVERALIASIP","action":"POC_MEDIASERVERALIASIP_ADD","actionObject":{"MEDIACARDID":"{{ mediacardid }}","ALIASIP":"{{ ifc.ip }}","ALIASIPVERSION_DISPLAY1":"IPV4","ALIASIPVERSION_DISPLAY2":"IPV6","INTERFACE_DEVICE":"{{ ifc.interface }}","NETMASK_ADDRESS":"{{ ifc.netmask }}","BROADCAST_ADDRESS":"{{ ifc.broadcast }}","ARP_INTERFACE":"{{ ifc.interface }}","PREFIX_LENGTH":"","NEIBOUR_ADVERTISE":0,"DUPLICATE_ADDRES_DET":0,"HEALTHPINGPORT":"4001","TCP_LISTEN_PORT":"4000","RTP_STARTPORT":"5000","RTP_ENDPORT":"55000","WEBRTC_RTCP_PORT":"4050","CLIENT_PLATFORM":"1","ALIASIPVERSION":1,"MEDIASERVER_PTTSERVERID":"{{ media_pttserverid }} ","CNTRLPOC_PTTSERVERID":"{{ poc_pttserverid }}"},"object":{"dgId":"{{ ip.pocdgid }}"}},
                    {% endfor %}
                  {% endfor %}
                {% endfor %}
              ]}
    
    - debug:
        msg: "{{ media_map }}"
    
    #  - meta: end_play
    
    - name: Map alias ip
      uri:
        url: "http://{{ cmsurl }}/cms/config?v=1618385170120"
        method: POST
        headers:
          Connection: 'keep-alive'
          Authorization: 'Bearer {{ cms_login_token }} '
          Accept: 'application/json, text/plain, */*'
        validate_certs: no
        body: "{{ item }}"
        body_format: json
      register: map_media_alias
      with_items: "{{ media_map | json_query('medialist[]') }}"
      failed_when: map_media_alias.json.code | int not in [200, 201]
    
    - set_fact:
        get_data_by_nwmap: "{{ map_media_alias |json_query('results[*].{ body: item, json: json}')|to_json |from_json  }}"
    
    
    - name: Printing response
      debug:
        var: get_data_by_nwmap
