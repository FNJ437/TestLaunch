---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - block:
        - name: Looping and creating body for adding servers
          set_fact:
            body_content: >
              {"context":"MANAGEDOBJECTS_NODE", "action":"MANAGEDOBJECTS_NODE_ADD", "actionObject":{ "dgInfo":[
                {% for item in f5 %}
                  {"cardDetails":[
                    {
                      "SIGNALINGCARD_NAME":"{{ item.containers[0].name }}",
                      "CHASSISID":"{{ item.chassisid }}",
                      "IPADDRESS":"{{ item.containers[0].interface[0].ip }}",
                      "CLUSTERID":"{{ item.clusterid }}",
                      "HOSTNAME":"{{ item.containers[0].name }}",
                      "NODETYPE":{{item.nodetype}}
                    },
                    {% if item.containers | length == 2 %}
                    {
                      "SIGNALINGCARD_NAME":"{{ item.containers[1].name }}",
                      "CHASSISID":"{{ item.chassisid }}",
                      "IPADDRESS":"{{ item.containers[1].interface[0].ip }}",
                      "CLUSTERID":"{{ item.clusterid }}",
                      "HOSTNAME":"{{ item.containers[1].name }}",
                      "NODETYPE":3
                    }
                    {% endif %}
                  ],
                  "DGID":"{{item.containers[0].dgid}}",
                  "DGNAME":"{{item.containers[0].name}}",
                  "CARDTYPE":"101"},
                {% endfor %}
              ]}}
        
        - name: Printing the body for addition
          ansible.builtin.debug:
            var: body_content
        
        
        - name: Sending request to backend for server addition
          uri:
            url: "http://{{cmsurl}}/cms/config?v=1631604718180"
        
            method: POST
            validate_certs: no
            headers:
              Connection: keep-alive
              Accept: application/json, text/plain, */*
              Authorization: "Bearer {{ result.json.accessToken }}"
            body: "{{ body_content }}"
            body_format: json
            timeout: 1200
            return_content: yes
          register: creation_result
          failed_when: creation_result.json.code | int not in [200, 201]
        
        - name: Result of ADD F5 SERVER task
          debug:
            var: creation_result
        
        - name: Get networkmap for F5 TO SERVER mapping
          uri:
            url: "http://{{cmsurl}}/cms/networkmap?v=1633605424448"
            method: POST
            headers:
              Connection: 'keep-alive'
              Authorization: 'Bearer {{ result.json.accessToken }} '
              Accept: 'application/json, text/plain, */*'
            validate_certs: no
            body: {"context":"networkmap","action":"networkmap"}
            body_format: json
          register: networkmap
        
        - name: Extract F5 PTTSERVERIDs
          set_fact:
            geo_f5_pptserverid: >-
                {% for server in networkmap.json.dgInfo %}{% if server.CARDTYPE == 101 and server.cardDetails[0].CLUSTERID == '2'%}{{server.cardDetails[0].PTTSERVERID}}{% endif %}{% endfor %}
            pri_f5_pttserverid: >-
                {% for server in networkmap.json.dgInfo %}{% if server.CARDTYPE == 101 and server.cardDetails[0].CLUSTERID == '1'%}{{server.cardDetails[0].PTTSERVERID}}{% endif %}{% endfor %}
        
        - name: Printing PTTSERVERIDs
          debug:
            msg: "{{ pri_f5_pttserverid }} {{ geo_f5_pptserverid }}"
        
        - name: Sending request for F5 TO SERVER mapping
          uri:
            url: "http://{{cmsurl}}/cms/config?v=1620302825524"
            method: POST
            headers:
              Connection: 'keep-alive'
              Authorization: 'Bearer {{ result.json.accessToken }} '
              Accept: 'application/json, text/plain, */*'
            validate_certs: no
            body: {"context":"F5_GEOMATE_MAP","action":"F5_GEOMATE_MAP_ADD","actionObject":{"PRI_F5_PTTSERVERID":"{{ pri_f5_pttserverid }}","GEO_F5_PTTSERVERID":"{{ geo_f5_pptserverid }}"}}
            body_format: json
          register: f5_to_server_mapping
          failed_when: f5_to_server_mapping.json.code | int not in [200, 201]
        
        - name: Result of the F5 to server mapping task
          debug:
            var: f5_to_server_mapping.json
        
        
        - name: Getting the required fields for SERVER TO F5 mapping
          uri:
            url: "http://{{cmsurl}}/cms/config?v=1633926504783"
            method: POST
            headers:
              Connection: keep-alive
              Authorization: 'Bearer {{ result.json.accessToken }} '
              Accept: 'application/json, text/plain, */*'
            validate_certs: no
            body: {"context":"F5_APPSERVERMAP","action":"F5_APPSERVERMAP_GETALL","object":{"":""}}
            body_format: json
          register: server_to_f5
          failed_when: server_to_f5.status not in [200, 201]
        
        - name: Extracting data from JSON response
          set_fact:
            data: "{{ server_to_f5 |to_json| from_json | json_query('json.data.additionalData3[*]') }}"
            pri_f5: "{{ f5_servers[0].SIGNALINGCARD_NAME + '_' + f5_servers[0].PTTSERVERID }}"
            geo_f5: "{{ f5_servers[0].GEO_F5_NAME + '_' + f5_servers[0].GEO_F5_PTTSERVERID }}"
            f5: "{{f5_servers}}"
          vars:
            f5_servers: "{{ server_to_f5 | json_query('json.data.additionalData1[*]') }}"
        
        - name: Generating Body for SERVER TO F5 mapping
          set_fact:
            server_f5_mapping: >
              {"body_list":[{% for server_type in data[0]%}{% for info in data[0][server_type] %}{"context":"F5_APPSERVERMAP","action":"F5_APPSERVERMAP_ADD","actionObject":{"PTTSERVERID":"{{info | regex_replace('.*_')}}","SIGNALINGCARDTYPE":{{ server_type.split('_')[1] | int }},"SUBNET":0,"SIGNALINGCARD_NAME":"{{ info.split('_')[0] }}","F5_PRIMARY":"{{ pri_f5 }}","F5_GEO":"{{ geo_f5 }}","F5_PTTSERVERID":"{{ f5[0].PTTSERVERID }}","F5_ACCESSNWTYPE":1},"object":{"":""}},{% endfor %}{% endfor %}]}
        
        - name: Sending request for SERVER TO F5 mapping
          uri:
            url: "http://{{cmsurl}}/cms/config?v=1633939852788"
            method: POST
            headers:
              Connection: 'keep-alive'
              Authorization: 'Bearer {{ result.json.accessToken }} '
              Accept: 'application/json, text/plain, */*'
            validate_certs: no
            body: "{{item}}"
            body_format: json
          register: server_to_f5_mapping_result
          with_items: "{{server_f5_mapping.body_list}}"
          failed_when: server_to_f5_mapping_result.json.code | int not in [200, 201]
        
        - name: Displaying result for SERVER TO F5 mapping task
          debug:
            var: server_to_f5_mapping_result
        
        - name: update the task in status file
          lineinfile:
              path: "{{status_file}}"
              line: "configure_f5"
        
      when: "'configure_f5' not in status_check_list"
