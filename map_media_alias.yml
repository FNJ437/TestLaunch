---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - import_role:
        name: checkjob

    - name: Get networkmap details
      include_tasks: get_networkmap_details.yml
    
    - set_fact:
        resp: "{{ get_networkmap | json_query('json.dgInfo')|to_json|from_json }}"
    
    - name: fetch rls IP and update backup server config substitution
      set_fact:
        backup: >
          {"backup_config":[
           {% for item in resp %}
            {% for c in item.cardDetails if c.SIGNALINGCARDTYPE == 102 %}
                {"context":"BACKUP_SRVR_CFG","action":"BACKUP_SRVR_CFG_ADD","actionObject":{"BKP_SRVR_ID":"","RLS_SERVER_FLAG":1,"BKP_SRVR_NAME":"RLSP","BKP_UP_TYPE":"0","IPADDRESS":"{{c.IPADDRESS}}","PATH":"","PORT":"22","REPORT_DAY":"1","REPORT_ENDTIME":"01:00","REPORT_FREQUENCY":"1","REPORT_STARTTIME":"00:00","TRANSPORT":"1","USER_NAME":"CDRPushUser","EN_USER_PASSWD":"kodiak"}},
            {% endfor %}
           {% endfor %}
           ]}
    
    - set_fact:
        bkp_svc_cfg: "{{ backup | to_json | from_json | json_query('backup_config')}}"
    
    - name: BACKUP_SRVR_CFG_ADD
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{{item}}'
         body_format: json
         status_code: 200
      register: bkp_srvr_cfg
      with_items: "{{ backup | to_json | from_json | json_query('backup_config')}}"
      when: dry_run == 0
      failed_when: bkp_srvr_cfg.json.code | int not in [200, 201]
    
    - name: BACKUP_SRVR_CFG_GETALL
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{"context":"BACKUP_SRVR_CFG","action":"BACKUP_SRVR_CFG_GETALL","object":{"dgId":""}}'
         body_format: json
         status_code: 200
      register: bkp_svc_get
      failed_when: bkp_svc_get.status not in [200]
    
    - set_fact:
        bkp_svc_id: "{{bkp_svc_get.json.data | to_json | from_json | json_query('values[*]') }}"
    
    - set_fact:
        bkp_svc_update: >
          {"update":[
           {% for u in bkp_svc_id if u.BKP_UP_TYPE == 4%}
                {"context":"BACKUP_SRVR_CFG","action":"BACKUP_SRVR_CFG_UPDATE","actionObject":{"PATH":"/DGdata/DGlogs","BKP_UP_TYPE":4,"RLS_SERVER_FLAG":1,"IS_PRIMARY_MS_BKPSERVER":null,"EN_USER_PASSWD":"kodiak","PORT":22,"BKP_SRVR_ID": {{u.BKP_SRVR_ID}},"IPADDRESS":"{{u.IPADDRESS}}","REPORT_FREQUENCY":null,"REPORT_DAY":null,"USER_NAME":"CDRPushUser","USER_PASSWD":"null","REPORT_STARTTIME":null,"TRANSPORT":1,"IS_FALLBACK_MS_BKPSERVER":null,"REPORT_ENDTIME":null,"BKP_SRVR_NAME":"RLSP","BKP_UP_TYPE_DISPLAY":"Log Backup","TRANSPORT_DISPLAY":"SFTP","REPORT_FREQUENCY_DISPLAY":null,"RLS_SERVER_FLAG_DISPLAY":"Yes"}},
           {% endfor%}
           ]}
    
    - set_fact:
        bkp_svc_cfg: "{{ bkp_svc_update | to_json | from_json | json_query('update')}}"
    
    - name: BACKUP_SRVR_CFG_UPDATE
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{{item}}'
         body_format: json
         status_code: 200
      register: bkp_srv_cfg_upd
      with_items: "{{ bkp_svc_update | to_json | from_json | json_query('update')}}"
      when: dry_run == 0
      failed_when: bkp_srv_cfg_upd.json.code | int not in [200, 201]
    
    - set_fact:
        poc_dgid: >
          {"dgid":[
            {% for i in resp if i.CARDTYPE == 32 %}
                {"context":"SYSLOGSERVERMAPPING","action":"SYSLOGSERVERMAPPING_GETALL","object":{"dgId":"{{i.DGID}}"}},
            {% endfor %}
              ]}
    
    - name: SYSLOGSERVERMAPPING_GETALL
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token  }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{{item}}'
         body_format: json
         status_code: 200
      register: sys_log_get
      with_items: "{{ poc_dgid | to_json | from_json | json_query('dgid')}}"
      failed_when: sys_log_get.status not in [200]
    
    - set_fact:
        sys_log: "{{sys_log_get.results | to_json | from_json | json_query('[].json.data.additionalData3[*].PTTSERVERID') | unique }}"
    
    - set_fact:
        sys_log_poc: >
          {"log_poc":[
             {% for i in resp if i.CONTAINERNAME == "POC Server" %}
              {% for c in i.cardDetails %}
               {% for n in sys_log %}
                {"context":"SYSLOGSERVERMAPPING","action":"SYSLOGSERVERMAPPING_ADD","actionObject":{"APPREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"APPFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"AUDITREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"AUDITFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"KPIREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"KPIFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"SECAUDREMLOGPTTSERVERID":"","SECAUDFALLBACKPTTSERVERID":"","SIGNALINGCARDID":"{{c.SIGNALINGCARDID}}","PTTSERVERID":"{{c.PTTSERVERID}}"},"object":{"dgId": "{{i.DGID}}"}},
               {% endfor %}
              {% endfor %}
             {% endfor %}
            ]}
      when: ( deployment_type == 2 )
    
    - set_fact:
        sys_log_media: >
          {"log_media":[
             {% for i in resp if i.CONTAINERNAME == "POC Server" %}
               {% for c in i.mediaCardDetails %}
                {% for n in sys_log %}
                 {"context":"SYSLOGSERVERMAPPING","action":"SYSLOGSERVERMAPPING_ADD","actionObject":{"APPREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"APPFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"AUDITREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"AUDITFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"KPIREMLOGPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[0]}}" {% elif c.CLUSTERID == "2" %} "{{n[1]}}" {% endif %},"KPIFALLBACKPTTSERVERID": {% if c.CLUSTERID == "1" %} "{{n[1]}}" {% elif c.CLUSTERID == "2" %} "{{n[0]}}" {% endif %},"SECAUDREMLOGPTTSERVERID":"","SECAUDFALLBACKPTTSERVERID":"","SIGNALINGCARDID":"{{c.SIGNALINGCARDID}}","PTTSERVERID":"{{c.PTTSERVERID}}"},"object":{"dgId": "{{i.DGID}}"}},
                {% endfor %}
              {% endfor %}
             {% endfor %}
            ]}
      when: ( deployment_type == 2 )
    
    - set_fact:
        sys_log_poc: >
          {"log_poc":[
             {% for i in resp if i.CONTAINERNAME == "POC Server" %}
              {% for c in i.cardDetails %}
               {% for n in sys_log %}
                {"context":"SYSLOGSERVERMAPPING","action":"SYSLOGSERVERMAPPING_ADD","actionObject":{"APPREMLOGPTTSERVERID":"{{n[0]}}","APPFALLBACKPTTSERVERID": "","AUDITREMLOGPTTSERVERID": "{{n[0]}}","AUDITFALLBACKPTTSERVERID": "" ,"KPIREMLOGPTTSERVERID": "{{n[0]}}" ,"KPIFALLBACKPTTSERVERID": "" ,"SECAUDREMLOGPTTSERVERID":"","SECAUDFALLBACKPTTSERVERID":"","SIGNALINGCARDID":"{{c.SIGNALINGCARDID}}","PTTSERVERID":"{{c.PTTSERVERID}}"},"object":{"dgId": "{{i.DGID}}"}},
               {% endfor %}
              {% endfor %}
             {% endfor %}
            ]}
      when: ( deployment_type == 3 )
    
    - set_fact:
        sys_log_media: >
          {"log_media":[
             {% for i in resp if i.CONTAINERNAME == "POC Server" %}
               {% for c in i.mediaCardDetails %}
                {% for n in sys_log %}
                 {"context":"SYSLOGSERVERMAPPING","action":"SYSLOGSERVERMAPPING_ADD","actionObject":{"APPREMLOGPTTSERVERID":"{{n[0]}}","APPFALLBACKPTTSERVERID": "","AUDITREMLOGPTTSERVERID": "{{n[0]}}","AUDITFALLBACKPTTSERVERID": "" ,"KPIREMLOGPTTSERVERID": "{{n[0]}}" ,"KPIFALLBACKPTTSERVERID": "" ,"SECAUDREMLOGPTTSERVERID":"","SECAUDFALLBACKPTTSERVERID":"","SIGNALINGCARDID":"{{c.SIGNALINGCARDID}}","PTTSERVERID":"{{c.PTTSERVERID}}"},"object":{"dgId": "{{i.DGID}}"}},
                {% endfor %}
              {% endfor %}
             {% endfor %}
            ]}
      when: ( deployment_type == 3 )
    
    - set_fact:
        aa: "{{ sys_log_poc | to_json | from_json | json_query('log_poc')}}"
    
    - set_fact:
        bb: "{{ sys_log_media | to_json | from_json | json_query('log_media')}}"
    
    - name: SYSLOGSERVERMAPPING_ADD
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{{item}}'
         body_format: json
         status_code: 200
      register: syslog_srvr_add
      with_items: "{{ sys_log_poc | to_json | from_json | json_query('log_poc')}}"
      when: dry_run == 0
      failed_when: syslog_srvr_add.json.code | int not in [200, 201]
    
    - name: SYSLOGSERVERMAPPING_ADD
      uri:
         url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
         method: POST
         headers:
           Connection: 'keep-alive'
           Authorization: 'Bearer {{ cms_login_token }} '
           Accept: 'application/json, text/plain, */*'
         validate_certs: no
         body: '{{item}}'
         body_format: json
         status_code: 200
      register: syslog_srvr_add_media
      with_items: "{{ sys_log_media | to_json | from_json | json_query('log_media')}}"
      when: dry_run == 0
      failed_when: syslog_srvr_add_media.json.code | int not in [200, 201]
