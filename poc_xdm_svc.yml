---

- name: Get networkmap
  uri:
    url: "http://{{cms.url}}/cms/networkmap?v=1633605424448"
    method: POST
    headers:
      Connection: 'keep-alive'
      Authorization: 'Bearer {{ result.json.accessToken }} '
      Accept: 'application/json, text/plain, */*'
    validate_certs: no
    body: {"context":"networkmap","action":"networkmap"}
    body_format: json
  register: networkmap
  failed_when: networkmap.status not in [200, 201]

- name: Extracting POC servers
  set_fact:
    servers: >
     {% for server in networkmap.json.dgInfo %}{% if server.CARDTYPE == 32 %}{{server}},{% endif %}{% endfor %}

- debug: var=servers

# ------------------ POC SERVICE -------------------------

- name: Fetching existing data for POC SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"POC_SVC_CONFIG","action":"POC_SVC_CONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for POC SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"POC_SVC_CONFIG","action":"POC_SVC_CONFIG_UPDATE","actionObject":{{ item.json.data[0] | combine({"PRIMARYPOCSERVERURI": item.item.DGNAME|lower~wildcard,"POC_CONFFACTORYURI":"ConfFactory@"~item.item.DGNAME|lower~wildcard,"CLIENTLOGURI_WIFI":"rls"~wildcard,"CLIENTLOGURI":"rls"~wildcard,"PREESTSESSIONVALIDITY": poc_service_config["PREESTSESSIONVALIDITY"],"POCPUBLISHVALIDITY": poc_service_config["POCPUBLISHVALIDITY"],"MAXFLOORHOLDDURATION": poc_service_config["MAXFLOORHOLDDURATION"],"FLOORIDLEDETECTIONTIMER": poc_service_config["FLOORIDLEDETECTIONTIMER"],"ENABLEINSTAPOC": poc_service_config["ENABLEINSTAPOC"],"ENABLE_REJOIN": poc_service_config["ENABLE_REJOIN"],"ENABLE_CALL_ENDED_ALERT": poc_service_config["ENABLE_CALL_ENDED_ALERT"],"ENABLELI": poc_service_config["ENABLELI"],"ENABLEPOCWIFI": poc_service_config["ENABLEPOCWIFI"],"ENABLEJITTERSTATS": poc_service_config["ENABLEJITTERSTATS"],"BLOCK_BLACKLIST_DEVICES": poc_service_config["BLOCK_BLACKLIST_DEVICES"],"ENABLE_MEDIA_RECONNECT_3G": poc_service_config["ENABLE_MEDIA_RECONNECT_3G"],"DYNAMICQOSFLAG": poc_service_config["DYNAMICQOSFLAG"],"CALLWITHDEFAULTBEARER": poc_service_config["CALLWITHDEFAULTBEARER"],"ENABLE_PRECALLKQI": poc_service_config["ENABLE_PRECALLKQI"],"ENABLE_SUPERVISORY_OVERRIDE": poc_service_config["ENABLE_SUPERVISORY_OVERRIDE"],"ENABLE_MISSED_CALL_ALERT": poc_service_config["ENABLE_MISSED_CALL_ALERT"],"ENABLE_POC_DONOR_RADIO_SUPPORT": poc_service_config["ENABLE_POC_DONOR_RADIO_SUPPORT"],"ENABLELICCC": poc_service_config["ENABLELICCC"],"ENABLE_TGSCANNING_CLIENT": poc_service_config["ENABLE_TGSCANNING_CLIENT"],"ENABLEDECOUPLEPRESENCE": poc_service_config["ENABLEDECOUPLEPRESENCE"],"ENABLE_WEBRTC": poc_service_config["ENABLE_WEBRTC"],"PDVCONNECTSUPPORTED": poc_service_config["PDVCONNECTSUPPORTED"],"ENABLE_INCALLKQI": poc_service_config["ENABLE_INCALLKQI"],"SIPRETRYTIMER": poc_service_config["SIPRETRYTIMER"],"IPDEBOUNCETIMER": poc_service_config["IPDEBOUNCETIMER"],"ENABLE_TALKGROUP_SELECT": poc_service_config["ENABLE_TALKGROUP_SELECT"],"ENABLE_BTRY_USG_OPT": poc_service_config["ENABLE_BTRY_USG_OPT"],"MULTI_SIM_SESSION": poc_service_config["MULTI_SIM_SESSION"],"UPGRADECALLLEGFLAG": poc_service_config["UPGRADECALLLEGFLAG"], "E2E_ENABLED": poc_service_config["E2E_ENABLED"], "DISCREET_ENABLED": poc_service_config["DISCREET_ENABLED"], "EMERGFEATACTIVATED": poc_service_config["EMERGENCY_FEATURE_FLAG"], "USERCHECK_ENABLED": poc_service_config["USERCHECK_ENABLED"], "ENABLE_TALKGROUP_SELECT_CLIENT": poc_service_config["ENABLE_TALKGROUP_SELECT_CLIENT"] })}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for POC SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# ------------------ Registrar service ------------------

- name: Fetching existing data for REGISTRAR SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"POCREGISTRARSRVCCONFIG","action":"POCREGISTRARSRVCCONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]


- name: Setting data for REGISTRAR SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"POCREGISTRARSRVCCONFIG","action":"POCREGISTRARSRVCCONFIG_UPDATE","actionObject":{{ item.json.data[0] | combine({"PRIMARYREGISTRARURI": item.item.DGNAME|lower~wildcard,"GEOREGISTRARURI":item.item.DGNAME|lower~"g"~wildcard,"MAXREGISTEREXPIRYTIMEDURATION": poc_registrar_config["MAXREGISTEREXPIRYTIMEDURATION"],"MAXREGISTEREXPIRYTIMEONUDP": poc_registrar_config["MAXREGISTEREXPIRYTIMEONUDP"],"MAXREGEXPTIMEONDTLS": poc_registrar_config["MAXREGEXPTIMEONDTLS"],"MAXREGEXPTIME_WIFI": poc_registrar_config["MAXREGEXPTIME_WIFI"],"TUDOWNTIMER": poc_registrar_config["TUDOWNTIMER"],"TUUPTIMERSTARTVAL": poc_registrar_config["TUUPTIMERSTARTVAL"],"TUUPTIMERMAXVAL": poc_registrar_config["TUUPTIMERMAXVAL"],"TUUPTIMERRAMPDOWNPERIOD": poc_registrar_config["TUUPTIMERRAMPDOWNPERIOD"],"ENABLETUFEATURE": poc_registrar_config["ENABLETUFEATURE"],"ENABLETUSMSFLAG": poc_registrar_config["ENABLETUSMSFLAG"],"ENABLETUDETECTIONBYSERVER": poc_registrar_config["ENABLETUDETECTIONBYSERVER"],"GEOREGISTRAR_PRIMARYF5URI_WIFI": item.item.DGNAME|lower~"ntfy"~wildcard,"GEOREGISTRAR_GEOF5URI_WIFI": item.item.DGNAME|lower~"gntfy"~wildcard,"GEOREGISTRAR_GEOF5URI": item.item.DGNAME|lower~"gntfy"~wildcard,"GEOREGISTRAR_PRIMARYF5URI": item.item.DGNAME|lower~"ntfy"~wildcard, "GEOREG_PRIM_F5URI_WIFI_WSS": item.item.DGNAME|lower~"ntfy"~wildcard, "GEOREG_GEOF5URI_WIFI_WSS": item.item.DGNAME|lower~"gntfy"~wildcard,  })}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for REGISTRAR SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# -------------------- Presence service --------------------

- name: Fetching existing data for PRESENCE SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"PRESENCESERVICECONFIG","action":"PRESENCESERVICECONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for PRESENCE SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"PRESENCESERVICECONFIG","action":"PRESENCESERVICECONFIG_UPDATE","actionObject":{{ item.json.data[0] |  combine({ 'PRIMARYPRESENCESERVERURI': item.item.DGNAME|lower~wildcard,'RLS_SUBSCRIPTIONVALIDITY': poc_presence_svc_config['RLS_SUBSCRIPTIONVALIDITY'],'PRESENCEPUBLISHVALIDITY':poc_presence_svc_config['PRESENCEPUBLISHVALIDITY'],'RLS_NOTIFYTHROTTLETIMER': poc_presence_svc_config['RLS_NOTIFYTHROTTLETIMER'] })}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for PRESENCE SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# ----------------------- SIP PROXY SERVICE -----------------------------

- name: Fetching existing data for SIP PROXY SERVICE
  no_log: true
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"SIPPROXYSVCCONFIG","action":"SIPPROXYSVCCONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for SIP PROXY SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"SIPPROXYSVCCONFIG","action":"SIPPROXYSVCCONFIG_UPDATE","actionObject":{{ item.json.data | combine({"SIPPROXYURI": item.item.DGNAME|lower~wildcard,"SIPPROXYURIFORBCS": item.item.DGNAME|lower~wildcard,"SIPPROXYURI_WIFI": item.item.DGNAME|lower~wildcard,"GEO_SIPPROXYURI": item.item.DGNAME|lower~"g"~wildcard,"GEO_SIPPROXYURI_WIFI": item.item.DGNAME|lower~"g"~wildcard, "TCP_KA_TIMER_ON_MACRO_CELLULAR": poc_sipproxy_svc_config["TCP_KA_TIMER_ON_MACRO_CELLULAR"],"ENABLESIPLOADBALANCE": poc_sipproxy_svc_config["ENABLESIPLOADBALANCE"],"SIPTRANSPORTTYPEONCELLULAR": poc_sipproxy_svc_config["SIPTRANSPORTTYPEONCELLULAR"],"MEDIATRANSPORTTYPEONCELLULAR": poc_sipproxy_svc_config["MEDIATRANSPORTTYPEONCELLULAR"],"CLIENT_INTF_IP_VERSION": poc_sipproxy_svc_config["CLIENT_INTF_IP_VERSION"],})}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for SIP PROXY SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  register: sip_prox_upd
  loop: "{{data}}"
  failed_when: sip_prox_upd.json.code | int not in [200, 201]

# -------------------- DOC SUBSCRIPTION SERVICE -------------------------

- name: Fetching existing data for DOC SUBSCRIPTION SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"XDMS_DOCSUBPRX_CONFIG","action":"XDMS_DOCSUBPRX_CONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for DOC SUBSCRIPTION SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"XDMS_DOCSUBPRX_CONFIG","action":"XDMS_DOCSUBPRX_CONFIG_UPDATE","actionObject":{{ item.json.data | combine({"PRIMARYDOCSUBPRXURI": item.item.DGNAME|lower~wildcard,"GEODOCSUBPRXURI": item.item.DGNAME|lower~"g"~wildcard,"DOCSUBSCRIPTIONVALIDITY": poc_doc_subscription_config["DOCSUBSCRIPTIONVALIDITY"],"XCAPROOTURI": "wms"~wildcard })}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for DOC SUBSCRIPTION SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# ------------------------ LOCATION SERVICE -------------------------

- name: Fetching existing data for LOCATION SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"LOCATIONSERVICECONFIG","action":"LOCATIONSERVICECONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for LOCATION SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"LOCATIONSERVICECONFIG","action":"LOCATIONSERVICECONFIG_UPDATE","actionObject":{{ item['json']['data']['values'] | combine({"LOCATION_SVC_ENABLED":location_svc_config["LOCATION_SVC_ENABLED"]})}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for LOCATION SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# ------------------------- ENVIRONMENT VARIABLES ---------------------------

- name: Fetching existing data for POC - ENVIRONMENT VARIABLES
  no_log: true
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"RTXENVVARIABLEINFO","action":"RTXENVVARIABLEINFO_GETALL","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for ENVIRONMENT VARIABLES
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"RTXENVVARIABLEINFO","action":"RTXENVVARIABLEINFO_UPDATE","actionObject":[{{{"PARAMNAME":"CB_INTEROP_FLAG","PARAMVALUE":"1","CHECK_BOX_VAL":0,"PTTSERVERID":item.item.cardDetails[0].PTTSERVERID,"DGNAME":item.item.DGNAME}}}],"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for ENVIRONMENT VARIABLES
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
    timeout: 120
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# ---------------------- SUBSYSTEM POC SIP EVENT HANDLER ---------------------

- name: Fetching existing data for SUBSYSTEM POC SIP EVENT HANDLER
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"SC_POCSIPEVENTHNDLR","action":"SC_POCSIPEVENTHNDLR_GETALL","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for SUBSYSTEM POC SIP EVENT HANDLER
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"SC_POCSIPEVENTHNDLR","action":"SC_POCSIPEVENTHNDLR_UPDATE","actionObject":{{ item.json.data | combine({"RELOGINTRIGONPRTU": poc_seh_config["RELOGINTRIGONPRTU"],"RELOGINTRIGONCALLTU":poc_seh_config["RELOGINTRIGONCALLTU"]})}},"object":{"dgId":{{item.item.DGID}}}},{% endfor %}

- name: Sending Update request for SUBSYSTEM POC SIP EVENT HANDLER
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# -------------------- BP CONFIGURATION ------------------------------------

- name: Fetching existing data for BP CONFIGURATION
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"BP_CONFIG","action":"BP_CONFIG_GET","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for BP CONFIGURATION
  set_fact:
    data: >
      {% for item in server_info.results %}{% if item.item.DGID == servers[0].DGID %}{"context":"BP_CONFIG","action":"BP_CONFIG_UPDATE","actionObject":{{ item.json.data | combine({"TENSECONDROUNDING":poc_bp_config["TENSECONDROUNDING"],"FILESIZE":poc_bp_config["FILESIZE"],"FILENAMEFORMAT":poc_bp_config["FILENAMEFORMAT"],"FILENAMEFORMAT":poc_bp_config["FILENAMEFORMAT"],"FILEOPENPERIOD":poc_bp_config["FILEOPENPERIOD"],"CDR_RECORD_VERSION":poc_bp_config["CDR_RECORD_VERSION"],"CDR_STORAGE_PERIOD":poc_bp_config["CDR_STORAGE_PERIOD"],"FILESEQNUMLENGTH":poc_bp_config["FILESEQNUMLENGTH"],"IS_FILESERVER":1})}},"object":{"dgId":"{{item.item.DGID}}"}},{% else %}{"context":"BP_CONFIG","action":"BP_CONFIG_UPDATE","actionObject":{{ item.json.data | combine({"TENSECONDROUNDING":poc_bp_config["TENSECONDROUNDING"],"FILESIZE":poc_bp_config["FILESIZE"],"FILENAMEFORMAT":poc_bp_config["FILENAMEFORMAT"],"FILENAMEFORMAT":poc_bp_config["FILENAMEFORMAT"],"FILEOPENPERIOD":poc_bp_config["FILEOPENPERIOD"],"CDR_RECORD_VERSION":poc_bp_config["CDR_RECORD_VERSION"],"CDR_STORAGE_PERIOD":poc_bp_config["CDR_STORAGE_PERIOD"],"FILESEQNUMLENGTH":poc_bp_config["FILESEQNUMLENGTH"],"IS_FILESERVER":poc_bp_config["IS_FILESERVER"]})}},"object":{"dgId":"{{item.item.DGID}}"}},{% endif %}{% endfor %}

- name: Sending Update request for BP CONFIGURATION
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# -------------------------- XDM --------------------------------------

- name: Extracting XDM servers
  set_fact:
    servers: >
     {% for server in networkmap.json.dgInfo %}{% if server.CARDTYPE == 36 %}{{server}},{% endif %}{% endfor %}

# -------------------------- XDM SERVICE ---------------------------

- name: Fetching existing data for XDM SERVICE
  no_log: true
  uri:
    url: "http://{{cms.url}}/cms/config?v=1635768644379"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"XDMS_SVC_CONFIG","action":"XDMS_SVC_CONFIG_GET","object":{"dgId":"{{item.DGID}}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for XDM SERVICE
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"XDMS_SVC_CONFIG","action":"XDMS_SVC_CONFIG_UPDATE","actionObject": {{ item.json.data[0] | combine({"XCAPROOTURI": "wms"~wildcard,"ENABLE_SUPERVISORY_OVERRIDE": xdm_service_config["ENABLE_SUPERVISORY_OVERRIDE"],"BLOCK_UNSUPPORTED_DEVICES": xdm_service_config["BLOCK_UNSUPPORTED_DEVICES"],"DISPATCH_GRP_ENABLED": xdm_service_config["DISPATCH_GRP_ENABLED"],"ENABLE_POC_DONOR_RADIO_SUPPORT": xdm_service_config["ENABLE_POC_DONOR_RADIO_SUPPORT"],"ENABLE_TALKGROUP_SELECT": xdm_service_config["ENABLE_TALKGROUP_SELECT"],"ENABLE_TALKGROUP_SELECT_CLIENT": xdm_service_config["ENABLE_TALKGROUP_SELECT_CLIENT"],"ENABLE_TGSCANNING_CLIENT": xdm_service_config["ENABLE_TGSCANNING_CLIENT"],"XCAPROOTURI_WIFI": "wms"~wildcard,"BROADCAST_GRP_ENABLED": xdm_service_config["BROADCAST_GRP_ENABLED"],"BLOCK_BLACKLIST_DEVICES": xdm_service_config["BLOCK_BLACKLIST_DEVICES"],"ENABLE_THIRD_PARTY_CLIENT": xdm_service_config["ENABLE_THIRD_PARTY_CLIENT"],"SUBSCR_DEF_PTTRADIO": xdm_service_config["SUBSCR_DEF_PTTRADIO"],"MAXSGMDNSPERGROUP": xdm_service_config["MAXSGMDNSPERGROUP"],"ENABLE_CLIENT_RECORDING": xdm_service_config["ENABLE_CLIENT_RECORDING"],"PTTRADIO_DEF_SCANMODE": xdm_service_config["PTTRADIO_DEF_SCANMODE"],"WEB_DISPATCH_ENABLED": xdm_service_config["WEB_DISPATCH_ENABLED"],"AMBIENT_ENABLED": xdm_service_config["AMBIENT_ENABLED"],"DISCREET_ENABLED": xdm_service_config["DISCREET_ENABLED"],"USERCHECK_ENABLED": xdm_service_config["USERCHECK_ENABLED"],"USERSVCCTRLENABLED": xdm_service_config["USERSVCCTRLENABLED"],"ENABLE_GRACEFUL_REHOME": xdm_service_config["ENABLE_GRACEFUL_REHOME"],"LARGE_GROUP_SUPPORTED": xdm_service_config["LARGE_GROUP_SUPPORTED"],"MULTI_SIM_SESSION": xdm_service_config["MULTI_SIM_SESSION"],"NUMOF_LARGE_GROUP_PERCORP": xdm_service_config["NUMOF_LARGE_GROUP_PERCORP"],"NUMOF_MBR_PER_LARGEGROUP": xdm_service_config["NUMOF_MBR_PER_LARGEGROUP"],"NUMOF_LARGE_BGROUP_PERCORP": xdm_service_config["NUMOF_LARGE_BGROUP_PERCORP"],"NUMOF_MBR_PER_LARGE_BGROUP": xdm_service_config["NUMOF_MBR_PER_LARGE_BGROUP"],"OIDCXCAPROOTURI": "wms"~wildcard,"OIDCXCAPROOTURI_WIFI": "wms"~wildcard, "KMSWSURI_WIFI": "kms"~wildcard, "EMERGFEATACTIVATED": xdm_service_config["EMERGFEATACTIVATED"], "ALLOW_SELF_NAME_CHG_CORP": xdm_service_config["ALLOW_SELF_NAME_CHG_CORP"]}) }},"object": {"dgId": {{item.item.DGID}} },},{% endfor %}

- name: Sending Update request for XDM SERVICE
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# -------------------------- PACKAGE INSTALLATION ---------------------------

- name: Fetching existing data for PACKAGE INSTALLATION
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"SOFTWAREPKGINSTALLINFO","action":"SOFTWAREPKGINSTALLINFO_GETALL","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for PACKAGE INSTALLATION
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"SOFTWAREPKGINSTALLINFO","action":"SOFTWAREPKGINSTALLINFO_UPDATE","actionObject":[{"PTTSERVERID":"{{item.item.cardDetails[0].PTTSERVERID}}","ISREQUIRED":{{xdm_package_installation["ISREQUIRED"]}},"DESCRIPTION":"Script that generates contact and group data snapshot report","SWPKGID":4001,"CARDTYPE":36,"NAME":"Contact and Group data snapshot report script","ISREQUIRED_DISPLAYNAME":"YES","selected":false,"IS_MODIFIED":true}],"object":{"dgId":"{{item.item.DGID}}"}},{% endfor %}

- name: Sending Update request for PACKAGE INSTALLATION
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

# -------------------------- ENVIRONMENT VARIABLES ---------------------------

- name: Fetching existing data for XDM - ENVIRONMENT VARIABLES
  no_log: true
  uri:
    url: "http://{{cms.url}}/cms/config?v=1634836651203"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "appication/json, text/plain, */*"
    method: POST
    body: '{"context":"RTXENVVARIABLEINFO","action":"RTXENVVARIABLEINFO_GETALL","object":{"dgId":"{{ item.DGID }}"}}'
    body_format: json
    return_content: yes
    timeout: 120
  loop: "{{servers}}"
  register: server_info
  failed_when: server_info.status not in [200, 201]

- name: Setting data for
  set_fact:
    data: >
      {% for item in server_info.results %}{"context":"RTXENVVARIABLEINFO","action":"RTXENVVARIABLEINFO_UPDATE","actionObject":{{[{"PTTSERVERID":item.item.cardDetails[0].PTTSERVERID,"PARAMNAME":"CONV_CLIENT_ENABLED","DGNAME":item.item.DGNAME,"PARAMVALUE":xdm_env_var["CONV_CLIENT_ENABLED"],"CHECK_BOX_VAL":0},{"PTTSERVERID":item.item.cardDetails[0].PTTSERVERID,"PARAMNAME":"XDMS_NEXT_GEN_CAT_ACCESS","DGNAME":item.item.DGNAME,"PARAMVALUE":xdm_env_var["XDMS_NEXT_GEN_CAT_ACCESS"],"CHECK_BOX_VAL":0},{"PTTSERVERID":item.item.cardDetails[0].PTTSERVERID,"PARAMNAME":"ENABLE_OIDC","DGNAME":item.item.DGNAME,"PARAMVALUE":xdm_env_var["ENABLE_OIDC"],"CHECK_BOX_VAL":0},]}},"object":{"dgId":"{{item.item.DGID}}"}},{% endfor %}

- name: Sending Update request for ENVIRONMENT VARIABLES
  uri:
    url: "http://{{cms.url}}/cms/config?v=634844190505"
    headers:
      Connection: keep-alive
      Authorization: "Bearer {{result.json.accessToken}}"
      Accept: "application/json, text/plain, */*"
    method: POST
    body: "{{item}}"
    body_format: json
    return_content: yes
  loop: "{{data}}"
  register: response
  failed_when: response.json.code | int not in [200, 201]

- name: update the task in status file
  lineinfile:
      path: "{{status_file}}"
      line: "poc_xdm_svc"
