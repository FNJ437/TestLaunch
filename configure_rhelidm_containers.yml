---
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: false

  tasks:
    - block:
        - name: Get the list of microservice containers
          uri:
             url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
             method: POST
             headers:
               Connection: 'keep-alive'
               Authorization: 'Bearer {{ cms_login_token }} '
               Accept: 'application/json, text/plain, */*'
             validate_certs: no
             timeout: 420
             body: '{"context":"MICROSVC_CONTAINERCONFIG","action":"MICROSVC_CONTAINERCONFIG_GETALL","object":{"dgId":""}}'
             body_format: json
          register: container_add
          failed_when: container_add.status not in [200, 201]
        
        - name: Filter microservice containers list
          set_fact:
              doc1: "{{ container_add |to_json| from_json | json_query('json.data.values[]') }}"
        
        - debug:
            msg: "{{ doc1 }}"
        
        - name: Container configure request
          set_fact:
            container_add: >
               {"context":"MICROSVC_CONTAINERCONFIG","action":"MICROSVC_CONTAINERCONFIG_CONFIGURE","actionObject":[
                {% for item in doc1 %}
                     {% for img_name in rhelidm_servers if ( img_name.clusterid == item.CLUSTERID ) %}
                     {% for i in img_name.containers if item.PTTSERVERID == i.pttid %}
                     {% if i.name == item.SERVICETYPE %}
                     {"CONTAINER_SIGCARDID":{{item.CONTAINER_SIGCARDID}},"IPADDRESS":"{{ item.IPADDRESS }}","SIGNALINGCARDTYPE":{{ item.SIGNALINGCARDTYPE }},"STATUS":0,"IMAGE":"{{ i.image }}","ROUTES":{% if item.CLUSTERID == 1 %} "{{ img_name.route }}" {% elif item.CLUSTERID == 2 %} "{{ img_name.route }}" {% endif %} ,"INTERFACE":null,"SERVICETYPE":"{{ item.SERVICETYPE }}","SIGNALINGCARD_NAME":"{{ item.SIGNALINGCARD_NAME }}","PTTSERVERID":"{{ item.PTTSERVERID }}","CPU_SET_CPUS": null,"SYNCGWREP_SYNCGWFUNC_FLAG":0},
                     {% endif %}
                     {% endfor %}
                     {% endfor %}
                {% endfor %}
                ]}
          when: ( deployment_type == 2 ) or ( deployment_type == 3 )
        
        - name: MICROSVC_CONTAINERCONFIG_CONFIGURE
          uri:
             url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
             method: POST
             headers:
               Connection: 'keep-alive'
               Authorization: 'Bearer {{ cms_login_token }} '
               Accept: 'application/json, text/plain, */*'
             validate_certs: no
             timeout: 420
             body: '{{ container_add }}'
             body_format: json
          register: container_configure
          when: dry_run == 0
          failed_when: container_configure.json.code | int not in [200, 201]
        
        - name: MICROSVC_GLOBAL_ATTR_VALUE_CONFIG_UPDATE
          uri:
             url: "http://{{ cmsurl }}/cms/networkmap?v=1620732259069"
             method: POST
             headers:
               Connection: 'keep-alive'
               Authorization: 'Bearer {{ cms_login_token }} '
               Accept: 'application/json, text/plain, */*'
             validate_certs: no
             body: '{"context":"MICROSVC_GLOBAL_ATTR_VALUE_CONFIG","action":"MICROSVC_GLOBAL_ATTR_VALUE_CONFIG_UPDATE","object":{},"actionObject":[{"PARAMNAME":"INTERNAL_HOST_DOMAIN","PARAMVALUE":"{{ INTERNAL_HOST_DOMAIN }}","CLUSTERID":2},{"PARAMNAME":"INTERNAL_HOST_DOMAIN","PARAMVALUE":"{{ INTERNAL_HOST_DOMAIN }}","CLUSTERID":1}]}'
             body_format: json
          register: container_configure
          when: dry_run == 0
          failed_when: container_configure.json.code | int not in [200, 201]
        
        - name: update the task in status file
          lineinfile:
              path: "{{status_file}}"
              line: "configure_rhelidm_containers"
        
      when: "'configure_rhelidm_containers' not in status_check_list"
